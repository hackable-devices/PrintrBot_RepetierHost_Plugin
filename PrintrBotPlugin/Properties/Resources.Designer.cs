//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.17929
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintrBotPlugin.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PrintrBotPlugin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finding X,Y and Z Home positions.
        /// </summary>
        internal static string Calibrate_Step1 {
            get {
                return ResourceManager.GetString("Calibrate_Step1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Printing calibration layer ....
        /// </summary>
        internal static string Calibrate_Step2 {
            get {
                return ResourceManager.GetString("Calibrate_Step2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Printing done. If the layer printed is too squashed, click on &quot;Nozzle too close&quot;, if the layer is not sticking, click on &quot;Nozzle too far&quot;. If it&apos;s fine, click on &quot;All is OK&quot;. You have to redo this calibration process until the layer is at the good height..
        /// </summary>
        internal static string Calibrate_Step2Done {
            get {
                return ResourceManager.GetString("Calibrate_Step2Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All is OK.
        /// </summary>
        internal static string Calibrate_Step3_OK {
            get {
                return ResourceManager.GetString("Calibrate_Step3_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nozzle Too Close.
        /// </summary>
        internal static string Calibrate_Step3_TooClose {
            get {
                return ResourceManager.GetString("Calibrate_Step3_TooClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nozzle Too Far.
        /// </summary>
        internal static string Calibrate_Step3_TooFar {
            get {
                return ResourceManager.GetString("Calibrate_Step3_TooFar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        internal static string CalibrateButton_Cancel {
            get {
                return ResourceManager.GetString("CalibrateButton_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Calibrate.
        /// </summary>
        internal static string CalibrateButton_Do {
            get {
                return ResourceManager.GetString("CalibrateButton_Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The process of calibration will first home all axes thanks to the endstops on each axis.Then, the printer will heat up and print a calibration layer. Once this is done, you will be able to tell if the printed layer is too squashed or too far from the plate.Start the calibration again until the layers are perfectly consistent..
        /// </summary>
        internal static string CalibrateHelp {
            get {
                return ResourceManager.GetString("CalibrateHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Calibration.
        /// </summary>
        internal static string CalibratePanelTitle {
            get {
                return ResourceManager.GetString("CalibratePanelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ; generated by Slic3r 1.1.7 on 2014-09-15 at 12:42:08
        ///
        ///; perimeters extrusion width = 0.40mm
        ///; infill extrusion width = 1.28mm
        ///; solid infill extrusion width = 0.68mm
        ///; top infill extrusion width = 0.68mm
        ///
        ///G21 ; set units to millimeters
        ///M107
        ///G1 Z20;
        ///M104 S208 ; set temperature
        ///M109 S208 ; wait for temperature to be reached
        ///G90 ; use absolute coordinates
        ///G92 E0
        ///M82 ; use absolute distances for extrusion
        ///G1 F1800.000 E-1.00000
        ///G92 E0
        ///G1 Z0.300 F4200.000
        ///G1 X83.877 Y85.378 F4200.000
        ///G1 E1.00 [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string calibration_cube {
            get {
                return ResourceManager.GetString("calibration_cube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Filament.
        /// </summary>
        internal static string FilamentPanelTitle {
            get {
                return ResourceManager.GetString("FilamentPanelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preheating temperature :.
        /// </summary>
        internal static string LabelPreheating {
            get {
                return ResourceManager.GetString("LabelPreheating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        internal static string LoadingButton_Cancel {
            get {
                return ResourceManager.GetString("LoadingButton_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Load filament.
        /// </summary>
        internal static string LoadingButton_Load {
            get {
                return ResourceManager.GetString("LoadingButton_Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unload filament.
        /// </summary>
        internal static string LoadingButton_Unload {
            get {
                return ResourceManager.GetString("LoadingButton_Unload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stopping fan ....
        /// </summary>
        internal static string LoadingLabel_FanOff {
            get {
                return ResourceManager.GetString("LoadingLabel_FanOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Starting fan ....
        /// </summary>
        internal static string LoadingLabel_FanOn {
            get {
                return ResourceManager.GetString("LoadingLabel_FanOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heating ....
        /// </summary>
        internal static string LoadingLabel_Heating {
            get {
                return ResourceManager.GetString("LoadingLabel_Heating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading.
        /// </summary>
        internal static string LoadingLabel_Loading {
            get {
                return ResourceManager.GetString("LoadingLabel_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Going up a bit ....
        /// </summary>
        internal static string LoadingLabel_MovingAway {
            get {
                return ResourceManager.GetString("LoadingLabel_MovingAway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unloading.
        /// </summary>
        internal static string LoadingLabel_Unloading {
            get {
                return ResourceManager.GetString("LoadingLabel_Unloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can now load the filament into the extruder and check that it&apos;s extruding.
        /// </summary>
        internal static string LoadingMessageBox_Text {
            get {
                return ResourceManager.GetString("LoadingMessageBox_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading filament.
        /// </summary>
        internal static string LoadingMessageBox_Title {
            get {
                return ResourceManager.GetString("LoadingMessageBox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to start a new calibration ? If you haven&apos;t calibrated before, click yes. If you already have calibrated and want to tweak your settings, click no..
        /// </summary>
        internal static string NewCalibrationOrNot_Text {
            get {
                return ResourceManager.GetString("NewCalibrationOrNot_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Calibration.
        /// </summary>
        internal static string NewCalibrationOrNot_Title {
            get {
                return ResourceManager.GetString("NewCalibrationOrNot_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 210.0.
        /// </summary>
        internal static string NumberOfLinesInCalibrationGCODE {
            get {
                return ResourceManager.GetString("NumberOfLinesInCalibrationGCODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop.
        /// </summary>
        internal static string PreheatButton_Cancel {
            get {
                return ResourceManager.GetString("PreheatButton_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        internal static string PreheatButton_Do {
            get {
                return ResourceManager.GetString("PreheatButton_Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heating ....
        /// </summary>
        internal static string PreheatLabel_Heating {
            get {
                return ResourceManager.GetString("PreheatLabel_Heating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not Heating.
        /// </summary>
        internal static string PreheatLabel_NotHeating {
            get {
                return ResourceManager.GetString("PreheatLabel_NotHeating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preheating.
        /// </summary>
        internal static string PreheatPanelTitle {
            get {
                return ResourceManager.GetString("PreheatPanelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check Connection.
        /// </summary>
        internal static string PrinterDisconnected_Button {
            get {
                return ResourceManager.GetString("PrinterDisconnected_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The PrintrBot seems not connected. Connect it again, and click Connect in the upper left corner of the interface..
        /// </summary>
        internal static string PrinterDisconnected_Label {
            get {
                return ResourceManager.GetString("PrinterDisconnected_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The PrintrBot seems to be disconnected. Connect it again, and click Connect in the upper left corner of the interface..
        /// </summary>
        internal static string PrinterDisconnected_Text {
            get {
                return ResourceManager.GetString("PrinterDisconnected_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Printer disconnected.
        /// </summary>
        internal static string PrinterDisconnected_Title {
            get {
                return ResourceManager.GetString("PrinterDisconnected_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PrintrBot Control Panel by CKAB.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can now unload the filament from the extruder slowly, make sure that you remove all little parts that may remain in the filament plunger..
        /// </summary>
        internal static string UnloadingMessageBox_Text {
            get {
                return ResourceManager.GetString("UnloadingMessageBox_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unloading filament.
        /// </summary>
        internal static string UnloadingMessageBox_Title {
            get {
                return ResourceManager.GetString("UnloadingMessageBox_Title", resourceCulture);
            }
        }
    }
}
